#define EnumCttiDefinition(Type, ...)                                                                         \
export template<>																			                  \
struct __identifier(enum)<Type>: Cardinal::TypeTraits::LogicTrue {                                            \
	static constexpr auto Data = Cardinal::CTTI::TypeTraits::Details::EnumDefinitionT<Type, __VA_ARGS__>{};   \
	static constexpr SizeT DataCount = COUNT_ARGUMENTS(__VA_ARGS__);                                          \
}

#define DefStructFieldData(Struct, Name)                                           \
    Cardinal::CTTI::TypeTraits::FieldTypeData<                                     \
        Struct,                                                                    \
        decltype(Struct::Name),                                                    \
        (Cardinal::SizeT) StructOffsetOfMember(Struct, Name),                      \
        decltype(Cardinal::TypeTraits::CreateTypeStr(L"" #Name))                   \
    >(Cardinal::TypeTraits::CreateTypeStr(L"" #Name))

#define DefStructMetaDataObj(Struct, ...)                                          \
    Cardinal::CTTI::TypeTraits::MakeCustomStruct<Struct>(__VA_ARGS__)

#define DefStructMetaData(Struct, ...)                                             \
    static constexpr auto FieldMetaData = DefStructMetaDataObj(Struct, __VA_ARGS__) #define ForceInline
